{"expireTime":9007200833493979000,"key":"transformer-remark-markdown-ast-8299107db3c2a31950ef8e8067e18ed5-gatsby-remark-collect-info-for-block-code-before-prismjsgatsby-remark-prismjsgatsby-remark-decorate-block-codegatsby-remark-add-heading-link-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"html","value":"\n    <button class=\"content__button_copy-to-buffer\" path=\"proverka-nevyzvannyh-funkcii\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  "},{"type":"span","children":[{"type":"text","value":"Проверка невызванных функций"}],"data":{"hName":"span"}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":31,"offset":30},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Случаются случаи, когда разработчики по невнимательности или из-за невнятно выбранных названий забывают вызывать функции, что может привести к трудновыявляемому багу. ","position":{"start":{"line":3,"column":1,"offset":32},"end":{"line":3,"column":168,"offset":199},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":32},"end":{"line":3,"column":168,"offset":199},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Разработчик подумал что isAuthorized\n     * это поле или свойство объекта, но не метод.\n     * \n     * Учитывая многообразие языков программирования\n     * с различными конвенциями именования, такая ошибка\n     * не является надуманной для недавно пришедших в\n     * ECMScript коммунити.\n     */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/**\n         * гость смог выполнить действия требующие\n         * привелегии авторизованного пользователя.\n         */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":5,"column":1,"offset":201},"end":{"line":28,"column":4,"offset":768},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Поэтому начиная с ","position":{"start":{"line":30,"column":1,"offset":770},"end":{"line":30,"column":19,"offset":788},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":30,"column":20,"offset":789},"end":{"line":30,"column":30,"offset":799},"indent":[]}}],"position":{"start":{"line":30,"column":19,"offset":788},"end":{"line":30,"column":31,"offset":800},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":30,"column":31,"offset":800},"end":{"line":30,"column":32,"offset":801},"indent":[]}},{"type":"inlineCode","value":"v3.7","position":{"start":{"line":30,"column":32,"offset":801},"end":{"line":30,"column":38,"offset":807},"indent":[]}},{"type":"text","value":" компилятор расценивает подобные ситуации как ошибку.","position":{"start":{"line":30,"column":38,"offset":807},"end":{"line":30,"column":91,"offset":860},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":770},"end":{"line":30,"column":91,"offset":860},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * [TypeScript &lt; v3.7]\n     * > Ok! Трудно выявляемая ошибка,\n     * \n     * [TypeScript >= v3.7]\n     * > Error! \n     * This condition will always return true since the\n     * function is always defined. Did you mean to call\n     * it instead?\n     */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":32,"column":1,"offset":862},"end":{"line":52,"column":4,"offset":1257},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Но поскольку подобное изменение является значимым, новое поведение нацелено исключительно на выражения расположенные в условном операторе ","position":{"start":{"line":54,"column":1,"offset":1259},"end":{"line":54,"column":139,"offset":1397},"indent":[]}},{"type":"inlineCode","value":"if","position":{"start":{"line":54,"column":139,"offset":1397},"end":{"line":54,"column":143,"offset":1401},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":54,"column":143,"offset":1401},"end":{"line":54,"column":144,"offset":1402},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1259},"end":{"line":54,"column":144,"offset":1402},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * [TypeScript >= v3.7]\n     * > Error\n     */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * name эквивалентно undefined\n     * хотя в реальности должно\n     * иметь значение 'guest'.\n     */</span>\n    <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>isAuthorized <span class=\"token operator\">?</span> user<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">:</span> <span class=\"token string\">'guest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":56,"column":1,"offset":1404},"end":{"line":79,"column":4,"offset":1782},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Кроме того, оно не работает с необязательными членами и при установленным в ","position":{"start":{"line":81,"column":1,"offset":1784},"end":{"line":81,"column":77,"offset":1860},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":81,"column":77,"offset":1860},"end":{"line":81,"column":84,"offset":1867},"indent":[]}},{"type":"text","value":" опции компилятора ","position":{"start":{"line":81,"column":84,"offset":1867},"end":{"line":81,"column":103,"offset":1886},"indent":[]}},{"type":"inlineCode","value":"--strictNullChecks","position":{"start":{"line":81,"column":103,"offset":1886},"end":{"line":81,"column":123,"offset":1906},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":81,"column":123,"offset":1906},"end":{"line":81,"column":124,"offset":1907},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1784},"end":{"line":81,"column":124,"offset":1907},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    isAuthorized <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// необязательный член</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * [TypeScript &lt; v3.7]\n     * > Ok! Трудно выявляемая ошибка,\n     * \n     * [TypeScript >= v3.7]\n     * > Ok! Трудно выявляемая ошибка,\n     */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":83,"column":1,"offset":1909},"end":{"line":100,"column":4,"offset":2221},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Также же ошибки не возникает если невызванная функция вызывается далее в условном блоке.","position":{"start":{"line":102,"column":1,"offset":2223},"end":{"line":102,"column":89,"offset":2311},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2223},"end":{"line":102,"column":89,"offset":2311},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Error</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Ok</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Ok!, ???</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Error</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Error</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":104,"column":1,"offset":2313},"end":{"line":137,"column":4,"offset":2765},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"В случаях когда подобный сценарий является преднамеренным, как например при тестировании, то невызванную функцию можно проверять на ","position":{"start":{"line":139,"column":1,"offset":2767},"end":{"line":139,"column":133,"offset":2899},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":139,"column":133,"offset":2899},"end":{"line":139,"column":139,"offset":2905},"indent":[]}},{"type":"text","value":" или ","position":{"start":{"line":139,"column":139,"offset":2905},"end":{"line":139,"column":144,"offset":2910},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":139,"column":144,"offset":2910},"end":{"line":139,"column":155,"offset":2921},"indent":[]}},{"type":"text","value":", а также прибегнуть к двойному отрицанию и тем самым дать понять что действия являются обдуманными.","position":{"start":{"line":139,"column":155,"offset":2921},"end":{"line":139,"column":255,"offset":3021},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2767},"end":{"line":139,"column":255,"offset":3021},"indent":[]}},{"type":"html","lang":"ts","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUser</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">isAuthorized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">someAction</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">:</span>IUser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Ok</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Ok</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>isAuthorized <span class=\"token operator\">!==</span> undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Ok</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">.</span>isAuthorized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","position":{"start":{"line":141,"column":1,"offset":3023},"end":{"line":160,"column":4,"offset":3275},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":162,"column":1,"offset":3277}}}}