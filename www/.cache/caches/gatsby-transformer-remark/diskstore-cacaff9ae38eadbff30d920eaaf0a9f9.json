{"expireTime":9007200833493979000,"key":"transformer-remark-markdown-ast-cf70ec0a45fc957dd23a8a5ce70e0a71-gatsby-remark-collect-info-for-block-code-before-prismjsgatsby-remark-prismjsgatsby-remark-decorate-block-codegatsby-remark-add-heading-link-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"html","value":"\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie-mehanizma-vyvoda-tipa-vysshego-poryadka-dlya-obobshchennyh-konstruktorov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  "},{"type":"span","children":[{"type":"text","value":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов"}],"data":{"hName":"span"}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":79,"offset":78},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"В ","position":{"start":{"line":3,"column":1,"offset":80},"end":{"line":3,"column":3,"offset":82},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":3,"column":4,"offset":83},"end":{"line":3,"column":14,"offset":93},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":82},"end":{"line":3,"column":15,"offset":94},"indent":[]}},{"type":"text","value":" версии ","position":{"start":{"line":3,"column":15,"offset":94},"end":{"line":3,"column":23,"offset":102},"indent":[]}},{"type":"inlineCode","value":"v3.4","position":{"start":{"line":3,"column":23,"offset":102},"end":{"line":3,"column":29,"offset":108},"indent":[]}},{"type":"text","value":" был усовершенствован механизм вывода типов для обобщенных функций реализующих функциональную композицию. Это в свою очередь повысило эффективность использования   ","position":{"start":{"line":3,"column":29,"offset":108},"end":{"line":3,"column":193,"offset":272},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"функциональных-hoc","position":{"start":{"line":3,"column":194,"offset":273},"end":{"line":3,"column":212,"offset":291},"indent":[]}}],"position":{"start":{"line":3,"column":193,"offset":272},"end":{"line":3,"column":213,"offset":292},"indent":[]}},{"type":"text","value":" при разработке ","position":{"start":{"line":3,"column":213,"offset":292},"end":{"line":3,"column":229,"offset":308},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"React-приложений","position":{"start":{"line":3,"column":230,"offset":309},"end":{"line":3,"column":246,"offset":325},"indent":[]}}],"position":{"start":{"line":3,"column":229,"offset":308},"end":{"line":3,"column":247,"offset":326},"indent":[]}},{"type":"text","value":". С выходом версии ","position":{"start":{"line":3,"column":247,"offset":326},"end":{"line":3,"column":266,"offset":345},"indent":[]}},{"type":"inlineCode","value":"v3.5","position":{"start":{"line":3,"column":266,"offset":345},"end":{"line":3,"column":272,"offset":351},"indent":[]}},{"type":"text","value":" подобный механизм был перенесен на конструкторы классов, что также повысило эффективность вывода типов при использования их в качестве ","position":{"start":{"line":3,"column":272,"offset":351},"end":{"line":3,"column":408,"offset":487},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"классовых-hoc","position":{"start":{"line":3,"column":409,"offset":488},"end":{"line":3,"column":422,"offset":501},"indent":[]}}],"position":{"start":{"line":3,"column":408,"offset":487},"end":{"line":3,"column":423,"offset":502},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3,"column":423,"offset":502},"end":{"line":3,"column":424,"offset":503},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":80},"end":{"line":3,"column":424,"offset":503},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Component<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> HocProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hocProp<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> hoc<span class=\"token operator\">&lt;</span>WrappedProps<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">:</span> ComponentClass<span class=\"token operator\">&lt;</span>WrappedProps<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ComponentClass<span class=\"token operator\">&lt;</span>WrappedProps <span class=\"token operator\">&amp;</span> HocProps<span class=\"token operator\">></span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> NestedProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> nestedProp<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomComponent</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>NestedProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * &lt;v3.5\n * const WrappedComponent: ComponentClass&lt;NestedProps&lt;{}> &amp; HocProps>\n * \n * >=v3.5\n * const WrappedComponent: new &lt;T>(props: NestedProps&lt;T> &amp; HocProps) => Component&lt;NestedProps&lt;T> &amp; HocProps>\n * \n */</span>\n<span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> <span class=\"token function\">hoc</span><span class=\"token punctuation\">(</span>CustomComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":5,"column":1,"offset":505},"end":{"line":27,"column":6,"offset":1185},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":28,"column":1,"offset":1186}}}}