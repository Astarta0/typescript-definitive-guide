{"expireTime":9007200833493979000,"key":"transformer-remark-markdown-html-ast-cb708f7cb269535e7b4a8bc5cad26e1d-gatsby-remark-collect-info-for-block-code-before-prismjsgatsby-remark-prismjsgatsby-remark-decorate-block-codegatsby-remark-add-heading-link-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"raw","value":"\n    <button class=\"content__button_copy-to-buffer\" path=\"strokovoi-identifikator-funkcii-konstruktora\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  "},{"type":"element","tagName":"span","properties":{},"children":[{"type":"text","value":"Строковой идентификатор функции-конструктора"}]}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":47,"offset":46}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeScript"}],"position":{"start":{"line":3,"column":1,"offset":48},"end":{"line":3,"column":13,"offset":60}}},{"type":"text","value":", начиная сверсии ","position":{"start":{"line":3,"column":13,"offset":60},"end":{"line":3,"column":31,"offset":78}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"v3.6"}],"position":{"start":{"line":3,"column":31,"offset":78},"end":{"line":3,"column":37,"offset":84}}},{"type":"text","value":" реализовывает механизм ecmascript спецификации предусматривающей строковое именование функции-конструктора. Другими словами, определение метода идентификатор которого представлен в виде строки экфивалентной ","position":{"start":{"line":3,"column":37,"offset":84},"end":{"line":3,"column":245,"offset":292}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"constructor\""}],"position":{"start":{"line":3,"column":245,"offset":292},"end":{"line":3,"column":260,"offset":307}}},{"type":"text","value":" расценивается как определение функции-конструктора. Если идентификатор помеается как вычисляемый ","position":{"start":{"line":3,"column":260,"offset":307},"end":{"line":3,"column":358,"offset":405}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[\"constructor\"]"}],"position":{"start":{"line":3,"column":358,"offset":405},"end":{"line":3,"column":375,"offset":422}}},{"type":"text","value":", то такое объявление расценивается обычным методом класса. ","position":{"start":{"line":3,"column":375,"offset":422},"end":{"line":3,"column":435,"offset":482}}}],"position":{"start":{"line":3,"column":1,"offset":48},"end":{"line":3,"column":435,"offset":482}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// этот ts код...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"constructor\"</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Constructor!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"constructor\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Method with name \"constructor\"!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Constructor!</span>\nt<span class=\"token punctuation\">.</span><span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Method with name \"constructor\"!</span>\n\n\n<span class=\"token comment\">// ...будетскомпилирован в этот js код</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Constructor!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"constructor\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Method with name \"constructor\"!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Constructor!</span>\nt<span class=\"token punctuation\">.</span><span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output: Method with name \"constructor\"!</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":6,"column":1,"offset":485},"end":{"line":35,"column":6,"offset":1093}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":6,"offset":1093}}}}