{"expireTime":9007200833493979000,"key":"transformer-remark-markdown-ast-d11db7e6c75815014c11669d69c2848b-gatsby-remark-collect-info-for-block-code-before-prismjsgatsby-remark-prismjsgatsby-remark-decorate-block-codegatsby-remark-add-heading-link-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"html","value":"\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie-mehanizma-proverki-izbytochnyh-polei-v-obedenennyh-tipah-union-types\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  "},{"type":"span","children":[{"type":"text","value":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)"}],"data":{"hName":"span"}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":83,"offset":82},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"В ","position":{"start":{"line":3,"column":1,"offset":84},"end":{"line":3,"column":3,"offset":86},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":3,"column":4,"offset":87},"end":{"line":3,"column":14,"offset":97},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":86},"end":{"line":3,"column":15,"offset":98},"indent":[]}},{"type":"text","value":" есть механизм называемый ","position":{"start":{"line":3,"column":15,"offset":98},"end":{"line":3,"column":41,"offset":124},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"проверкой избыточности свойств","position":{"start":{"line":3,"column":42,"offset":125},"end":{"line":3,"column":72,"offset":155},"indent":[]}}],"position":{"start":{"line":3,"column":41,"offset":124},"end":{"line":3,"column":73,"offset":156},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":3,"column":73,"offset":156},"end":{"line":3,"column":75,"offset":158},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"excess property checking","position":{"start":{"line":3,"column":76,"offset":159},"end":{"line":3,"column":100,"offset":183},"indent":[]}}],"position":{"start":{"line":3,"column":75,"offset":158},"end":{"line":3,"column":101,"offset":184},"indent":[]}},{"type":"text","value":"), который призван выявлять опечатки в литералах объекта.","position":{"start":{"line":3,"column":101,"offset":184},"end":{"line":3,"column":158,"offset":241},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":84},"end":{"line":3,"column":158,"offset":241},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> RectCssStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n    color<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">let</span> graphics<span class=\"token punctuation\">:</span> RectCssStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token string\">'24px'</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token string\">'24px'</span><span class=\"token punctuation\">,</span>\n\n    colour<span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":5,"column":1,"offset":243},"end":{"line":20,"column":6,"offset":451},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"С этим механизмом связанно два неоднозначных момента. Первый момент заключается в том, что в ","position":{"start":{"line":22,"column":1,"offset":453},"end":{"line":22,"column":94,"offset":546},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":22,"column":95,"offset":547},"end":{"line":22,"column":105,"offset":557},"indent":[]}}],"position":{"start":{"line":22,"column":94,"offset":546},"end":{"line":22,"column":106,"offset":558},"indent":[]}},{"type":"text","value":", в некоторых случаях, избыточность допускается. Один из таких случчаев является присвоение идентификатору, ассоциированного с типом Union, значения принадлежащего одновеременно ко всем типам определеляющих это объединение. ","position":{"start":{"line":22,"column":106,"offset":558},"end":{"line":22,"column":330,"offset":782},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":453},"end":{"line":22,"column":330,"offset":782},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// до версии v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">/**\n * По логике, в данном объекте, либо поля xy либо поле z являются излишними,\n * так как тип Union одновременно представляет лишь один определяющий\n * его тип данных\n */</span>\n<span class=\"token keyword\">const</span> coords<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":25,"column":1,"offset":785},"end":{"line":49,"column":6,"offset":1153},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Второй неоднозначный момент сокрыт в реализации описанного выше поведения, которая даже не предусматривает проверку типов для полей являющихся излишними.","position":{"start":{"line":51,"column":1,"offset":1155},"end":{"line":51,"column":154,"offset":1308},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1155},"end":{"line":51,"column":154,"offset":1308},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// до версии v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// вывод типов считает что значение принадлежит к типу CoordXY</span>\n<span class=\"token keyword\">const</span> coordsFirst<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// вывод типов считает что значение принадлежит к типу CoordZ</span>\n<span class=\"token keyword\">const</span> coordsSecond<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ok...</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":53,"column":1,"offset":1310},"end":{"line":78,"column":6,"offset":1974},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Это поведение кажется нелогичным, поэтому Начиная с версии ","position":{"start":{"line":80,"column":1,"offset":1976},"end":{"line":80,"column":60,"offset":2035},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"TypeScript","position":{"start":{"line":80,"column":61,"offset":2036},"end":{"line":80,"column":71,"offset":2046},"indent":[]}}],"position":{"start":{"line":80,"column":60,"offset":2035},"end":{"line":80,"column":72,"offset":2047},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":80,"column":72,"offset":2047},"end":{"line":80,"column":73,"offset":2048},"indent":[]}},{"type":"inlineCode","value":"v3.5","position":{"start":{"line":80,"column":73,"offset":2048},"end":{"line":80,"column":79,"offset":2054},"indent":[]}},{"type":"text","value":" частично было изменено. Теперь при проверке литералов объекта выполняется проверка типов, что устроняет второй неоднозначным случай.","position":{"start":{"line":80,"column":79,"offset":2054},"end":{"line":80,"column":212,"offset":2187},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1976},"end":{"line":80,"column":212,"offset":2187},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// начиная с v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> coordsFirst<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> coordsSecond<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":82,"column":1,"offset":2189},"end":{"line":106,"column":6,"offset":2494},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}},{"type":"paragraph","children":[{"type":"text","value":"Тем не менее, нужно помнить, что первый случай, который также быд обозначен как не совсем очевидный, остался.","position":{"start":{"line":108,"column":1,"offset":2496},"end":{"line":108,"column":110,"offset":2605},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2496},"end":{"line":108,"column":110,"offset":2605},"indent":[]}},{"type":"html","lang":"typescript","meta":null,"value":"<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// ... </span>\n\n\n<span class=\"token keyword\">const</span> coords<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","position":{"start":{"line":110,"column":1,"offset":2607},"end":{"line":119,"column":6,"offset":2712},"indent":[1,1,1,1,1,1,1,1,1]},"metadata":{"filepath":""}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":120,"column":1,"offset":2713}}}}