{"expireTime":9007200833493979000,"key":"transformer-remark-markdown-html-6a547e448c558bf2cdb77e0ffaed862e-gatsby-remark-collect-info-for-block-code-before-prismjsgatsby-remark-prismjsgatsby-remark-decorate-block-codegatsby-remark-add-heading-link-","val":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"massivopodobnye-readonly-tipy\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Массивоподобные readonly типы</span></h2>\n<p>Начиная с версии <code>v3.4</code>, в <em>TypeScript</em> появилась возможность объявлять <code>Массивоподобные readonly структуры</code> типы, к которым относятся массивы (<code>Array</code>) и кортежи (<code>Tuples</code>). Данный механизм призван защитить элементы массиовоподобных структур от изменения и тем самым повысить типобезопасность программ разрабатываемых на <em>TypeScript</em>. Элементы массивоподобных структур объявленных как <code>readonly</code> невозможно заменить или удалить. Кроме того, в подобные структуры невозможно добавить новые элементы.</p>\n<p>Для того чтобы объявить <code>readonly</code> массив или кортеж достаточно указать в сигнатуре типа модификатор <code>readonly</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> array<span class=\"token punctuation\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Массив</span>\n<span class=\"token keyword\">let</span> tuple<span class=\"token punctuation\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Кортеж</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>В случаи, объявления <code>readonly</code> массива, становится невозможно изменить его элементы с помощью индексной сигнатуры (<code>array[...]</code>) </p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> array<span class=\"token punctuation\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Wayne'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span>\narray<span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Помимо этого, у <code>readonly</code> массива отсутствуют методы с помощью которым можно изменить элементы массива.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> array<span class=\"token punctuation\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Batman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'push' does not exist on type 'readonly number[]'.ts(2339)</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'shift' does not exist on type 'readonly number[]'.ts(2339)</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>С учетом погрешности на известные различия между массивом и кортежем, справедливо утверждать, что правила для <code>readonly</code> массива, справедливы и для <code>readonly</code> кортежа.</p>\n<p>Помимо того, что невозможно изменить или удалить слоты кортежа, он также теряет признаки массива, которые способны привести кего изменению.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> tuple<span class=\"token punctuation\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ntuple<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Wayne'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Cannot assign to '0' because it is a read-only property.ts(2540)</span>\n\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Batman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'push' does not exist on type 'readonly [string, string]'.ts(2339)</span>\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'shift' does not exist on type 'readonly [string, string]'.ts(2339)</span>\n\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Кроме того механизм массивоподобных <code>readonly</code> структур, начиная с версии <em>TypeScript</em> <code>v3.4</code>, повлиял на поведение такого расширенного типа, как <code>Readonly&#x3C;T></code>. </p>\n<p>До версии <code>v3.4</code> поведение типа <code>Readonly&#x3C;T></code> полноценно распростронялось только на объекты.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// Ok, { readonly a: string, readonly b: number }</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad, number[]</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad, [string, boolean]</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>,fdktyyj\nНо начиная с версии <code>v3.4</code> поведение для типа <code>Readonly&#x3C;T></code> дополняется поведением массивоподобных <code>readonly</code> структур.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// Ok, { readonly a: string, readonly b: number }</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Ok, readonly number[]</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Ok, readonly [string, boolean]</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>На последок стоит упомянуть, что используя механизм массивоподобных <code>readonly</code> структур, по своей сути, компилятор расценивает эти структуры, как принадлежащие к интерфейсу добавленному вверсии <code>v3.4</code> <code>ReadonlyArray&#x3C;T></code>,речь о котором пойдет далее.</p>"}