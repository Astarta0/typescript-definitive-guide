{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/ru/what-is-new/3.5","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"locale":"ru","localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"path":"/ru","name":"Главная"},{"path":"/ru/book/chapters","name":"Оглавление"},{"path":"/ru/what-is-new","name":"Что нового?"},{"path":"/ru/tests","name":"Срез знаний"},{"path":"/ru/keywords","name":"Ключевой указатель"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопированна!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"#","tooltip":["Следить за","изменениями в","Telegram"],"label":["Следить за изменениями в","Telegram"]},"githubButton":{"href":"#","tooltip":["Посетить проект на","Github"],"label":["Посетить проект на","Github"]}},"donateDropdown":{"href":"#","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Щтправить"}}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буффер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Расскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"greeting":"ПриветМир!"}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Подробное руководство по языку TypeScript, которое шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буффер обмена"}}}}}},"innovationData":{"versionMMP":"3.5","lastVersionStatus":{"version":"3.5","date":"May 29, 2019"},"innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi-tip-omit","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"vspomogatelnyi-tip-omit\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Вспомогательный тип Omit</span></h2>\n<p>В повседневной разработке очень часто требуется определить новый тип описывающий некоторую часть существующего. До версии <em>TypeScript</em> <code>3.5</code> подобное можно было реализовать при помощи типов <code>Exclude&#x3C;T, U></code> и <code>Pick&#x3C;T, K></code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    lastName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n    age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * определяем тип Union состоящий из строковых литеральных типов\n * представляемых ключами типа Person, за исключением исключенного\n * поля age.\n * \n * type RemainingKeys = \"firstName\" | \"lastName\"\n */</span>\n<span class=\"token keyword\">type</span> RemainingKeys <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token keyword\">keyof</span> Person<span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * определяем новый тип состоящий из ключей\n * полученных на предыдущем шаге.\n * \n * type PersonName = {\n *  firstName: string;\n *  lastName: string;\n * }\n */</span>\n<span class=\"token keyword\">type</span> PersonName <span class=\"token operator\">=</span> Pick<span class=\"token operator\">&lt;</span>Person<span class=\"token punctuation\">,</span> RemainingKeys<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Поскольку потребность в сужении типа возникает довольно часто, это вынуждает разработчиков выносить требующийся функционал в отдельную сущность, что неизбежно затрудняет чтение кода другими разработчиками, так как знакомый всем механизм скрыт за незнакомым им идентификатором типа (именем типа).</p>\n<p>По этой причине разработчики <code>TypeScript</code> расширили стандартную библиотеку <code>lib.d.ts</code> новым вспомогательным типом <code>Omit&#x3C;T, K></code>, который стандартизирует, обсуждаемую на протяжении главы, логику.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    lastName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n    age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * type PersonName = {\n *  firstName: string;\n *  lastName: string;\n * }\n */</span>\n<span class=\"token keyword\">type</span> PersonName <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>Person<span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Вспомогательный тип Omit/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-proverki-izbytochnyh-polei-v-obedenennyh-tipah-union-types","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie-mehanizma-proverki-izbytochnyh-polei-v-obedenennyh-tipah-union-types\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма проверки избыточных полей в объедененных типах (Union types)</span></h2>\n<p>В <em>TypeScript</em> есть механизм называемый <em>проверкой избыточности свойств</em> (<em>excess property checking</em>), который призван выявлять опечатки в литералах объекта.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> RectCssStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n    color<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">let</span> graphics<span class=\"token punctuation\">:</span> RectCssStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token punctuation\">:</span> <span class=\"token string\">'24px'</span><span class=\"token punctuation\">,</span>\n    height<span class=\"token punctuation\">:</span> <span class=\"token string\">'24px'</span><span class=\"token punctuation\">,</span>\n\n    colour<span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>С этим механизмом связанно два неоднозначных момента. Первый момент заключается в том, что в <em>TypeScript</em>, в некоторых случаях, избыточность допускается. Один из таких случчаев является присвоение идентификатору, ассоциированного с типом Union, значения принадлежащего одновеременно ко всем типам определеляющих это объединение. </p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// до версии v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">/**\n * По логике, в данном объекте, либо поля xy либо поле z являются излишними,\n * так как тип Union одновременно представляет лишь один определяющий\n * его тип данных\n */</span>\n<span class=\"token keyword\">const</span> coords<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Второй неоднозначный момент сокрыт в реализации описанного выше поведения, которая даже не предусматривает проверку типов для полей являющихся излишними.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// до версии v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// вывод типов считает что значение принадлежит к типу CoordXY</span>\n<span class=\"token keyword\">const</span> coordsFirst<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// вывод типов считает что значение принадлежит к типу CoordZ</span>\n<span class=\"token keyword\">const</span> coordsSecond<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ok...</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Ok, несмотря на то, что тип определен как number при присваивании значения принадлежащего к типу string ошибки не возникает</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Это поведение кажется нелогичным, поэтому Начиная с версии <em>TypeScript</em> <code>v3.5</code> частично было изменено. Теперь при проверке литералов объекта выполняется проверка типов, что устроняет второй неоднозначным случай.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// начиная с v3.5</span>\n\n<span class=\"token keyword\">type</span> CoordXY <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> coordsFirst<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> coordsSecond<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Error</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Тем не менее, нужно помнить, что первый случай, который также быд обозначен как не совсем очевидный, остался.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// ... </span>\n\n\n<span class=\"token keyword\">const</span> coords<span class=\"token punctuation\">:</span> CoordXY <span class=\"token operator\">|</span> CoordZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    z<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма проверки избыточных полей в объедененных типах \\(Union types\\)/content.md"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie-novogo-flaga-allowumdglobalaccess","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"vvedenie-novogo-flaga-allowumdglobalaccess\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Введение нового флага --allowUmdGlobalAccess</span></h2>\n<p>Посколько, до недавнего времени, спецификация <em>ESMAScript</em> не предлагала модульную систему, разработчикам приходилось прибегать к использованию множества несовместимых между собой реализаций поражденных сообществом, которые затем были унифицированы за счет так называемой <em>универсальной модульной системы</em> (<em>UMD</em>). Кроме того,библиотеки создавались таким образом чтобы быть доступными через глобальную область видимости.</p>\n<p>Со стандартизацией <em>esmodules</em>, в <em>TypeScript</em>, при попытке обратится к библиотеке через объявленный в глобальной области идентификатор, возникает ошибка.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Rx <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, обращение к глобальным переменным в модулях недопустимо</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Rx <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, так как импортирован модуль</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Но посколько со стороны сообщества неоднократно поступали просьбы сделать доступными в модулях глобальные определения, разработчики <em>TypeScript</em> ввели новый флаг <code>--allowUmdGlobalAccess</code> благодаря которому появилась такая возможность.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// tsconfig.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"allowUmdGlobalAccess\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Rx <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, доступ к глобальному определению из модуля</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Введение нового флага --allowUmdGlobalAccess/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-proverki-obedinennyh-tipov","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie-mehanizma-proverki-obedinennyh-tipov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма проверки объединенных типов</span></h2>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Source <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> done<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> Target <span class=\"token operator\">=</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> done<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> source<span class=\"token punctuation\">:</span> Source<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">let</span> target<span class=\"token punctuation\">:</span> Target<span class=\"token punctuation\">;</span>\n\ntarget <span class=\"token operator\">=</span> source<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, до v3.5 и Ok после</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Поскольку в примере выше тип <code>Source</code>, за исключением поля <code>done</code>, идентичен типу <code>Target</code>, новый механизм проверки объедененных типов допускает присвоение значения первого типа идентификатору принадлежащего ко второму типу.</p>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма проверки объединенных типов/content.md"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-vyvoda-tipa-vysshego-poryadka-dlya-obobshchennyh-konstruktorov","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie-mehanizma-vyvoda-tipa-vysshego-poryadka-dlya-obobshchennyh-konstruktorov\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов</span></h2>\n<p>В <em>TypeScript</em> версии <code>v3.4</code> был усовершенствован механизм вывода типов для обобщенных функций реализующих функциональную композицию. Это в свою очередь повысило эффективность использования   <em>функциональных-hoc</em> при разработке <em>React-приложений</em>. С выходом версии <code>v3.5</code> подобный механизм был перенесен на конструкторы классов, что также повысило эффективность вывода типов при использования их в качестве <em>классовых-hoc</em>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> ComponentClass<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Component<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> HocProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hocProp<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> hoc<span class=\"token operator\">&lt;</span>WrappedProps<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">:</span> ComponentClass<span class=\"token operator\">&lt;</span>WrappedProps<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ComponentClass<span class=\"token operator\">&lt;</span>WrappedProps <span class=\"token operator\">&amp;</span> HocProps<span class=\"token operator\">></span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> NestedProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> nestedProp<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomComponent</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token operator\">&lt;</span>NestedProps<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * &lt;v3.5\n * const WrappedComponent: ComponentClass&lt;NestedProps&lt;{}> &amp; HocProps>\n * \n * >=v3.5\n * const WrappedComponent: new &lt;T>(props: NestedProps&lt;T> &amp; HocProps) => Component&lt;NestedProps&lt;T> &amp; HocProps>\n * \n */</span>\n<span class=\"token keyword\">const</span> WrappedComponent <span class=\"token operator\">=</span> <span class=\"token function\">hoc</span><span class=\"token punctuation\">(</span>CustomComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов/content.md"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe-ogranichenie-obobshchennyh-parametrov-tipom-unknown","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"neyavnoe-ogranichenie-obobshchennyh-parametrov-tipom-unknown\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Неявное ограничение обобщенных параметров типом unknown</span></h2>\n<p>Начиная с версии <code>v3.5</code> обобщенные параметры типа неявно определяются как принадлежащие к типу <code>unknown</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Stack</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/**\n * &lt;v3.5\n * let item: {}\n * \n * >= v3.5\n * let item: unknown\n */</span>\n<span class=\"token keyword\">let</span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Stack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Неявное ограничение обобщенных параметров типом unknown/content.md"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie-pravil-dlya-tipa-unknown-i-indeksnoi-signature","html":"<h2>\n    <button class=\"content__button_copy-to-buffer\" path=\"izmenenie-pravil-dlya-tipa-unknown-i-indeksnoi-signature\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Изменение правил для типа unknown и индексной сигнатуре</span></h2>\n<p>В <em>TypeScript</em> тип представленный индексной сигнатурой ассоциированной с типом <code>any</code>, совместим с любым объектным типом. </p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Dictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> dictionary<span class=\"token punctuation\">:</span> Dictionary<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> literalObjectType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f0<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> f1<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> anyType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\ndictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> literalObjectType<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> anyType<span class=\"token punctuation\">;</span>\ndictionary <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token function-variable function\">dictionary</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> Boolean<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>До версии <code>v3.5</code> тип <code>unknown</code> в индексной сигнатуре вел себя аналогичным образом.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// &lt;v3.5</span>\n\n<span class=\"token keyword\">type</span> Dictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> dictionary<span class=\"token punctuation\">:</span> Dictionary<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> literalObjectType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f0<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> f1<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> anyType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\ndictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> literalObjectType<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> anyType<span class=\"token punctuation\">;</span>\ndictionary <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token function-variable function\">dictionary</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> Boolean<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>\n<p>Начиная с версии <code>v3.5</code> поведение для типа <code>unknown</code> в индексной сигнатуре было изменено. Теперь он совместим лишь с типами представляемыми литералами объектов и типом <code>any</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_typescript\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">typescript</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// >= 3.5</span>\n\n<span class=\"token keyword\">type</span> Dictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">unknown</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> dictionary<span class=\"token punctuation\">:</span> Dictionary<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> literalObjectType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f0<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> f1<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> anyType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\ndictionary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> literalObjectType<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ndictionary <span class=\"token operator\">=</span> anyType<span class=\"token punctuation\">;</span>\ndictionary <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n<span class=\"token function-variable function\">dictionary</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\ndictionary <span class=\"token operator\">=</span> Boolean<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_typescript\"></div>\n</div>","commitInfoAll":[{"committedDate":"2019-10-19T09:07:25Z","message":"remove files 'content.md' and add files 'metadata.json' and dirs .","messageHeadline":"remove files 'content.md' and add files 'metadata.json' and dirs .","pushedDate":"2019-10-19T09:07:50Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.5/Изменение правил для типа unknown и индексной сигнатуре/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"versionMMP":"3.3","lastVersionStatus":{"version":"3.3","date":"January 31, 2019"},"innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"povyshenie-proizvoditelnosti-sborki-dlya-komandy-build-watch"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"versionMMP":"3.4","lastVersionStatus":{"version":"3.4","date":"March 29, 2019"},"innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii-kompilyatora-tsbuildinfofile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"opcii-kompilyatora-incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"massivopodobnye-readonly-tipy"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"rasshirennyi-tip-readonlyarray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"prividenie-k-konstante-const-assertion"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"versionMMP":"3.5","lastVersionStatus":{"version":"3.5","date":"May 29, 2019"},"innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vspomogatelnyi-tip-omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-proverki-izbytochnyh-polei-v-obedenennyh-tipah-union-types"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"vvedenie-novogo-flaga-allowumdglobalaccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-proverki-obedinennyh-tipov"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"uluchshenie-mehanizma-vyvoda-tipa-vysshego-poryadka-dlya-obobshchennyh-konstruktorov"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"neyavnoe-ogranichenie-obobshchennyh-parametrov-tipom-unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"izmenenie-pravil-dlya-tipa-unknown-i-indeksnoi-signature"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"versionMMP":"3.6","lastVersionStatus":{"version":"3.6","date":"August 28, 2019"},"innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"povyshenie-tipobezopasnosti-generotorov"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlenie-helpera-imetiruushchego-mehanizm-spread-array-pri-kompilyacii-v-ecmascript-nije-versii-6-pri-neaktivnom-flage-downleveliteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie-sistemy-tipov-tipami-predstavlyaushchimi-struktury-dannyh-tolko-dlya-chteniya"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"strokovoi-identifikator-funkcii-konstruktora"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"rasshirenie-vyvoda-ob-oshibkah-pri-rabote-s-promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"sliyanie-odnoimennyh-klassov-i-funkcii-iz-okrujaushchego-konteksta"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"dobavlena-podderjka-unicode-dlya-identifikatorov"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"podderjka-import-meta-dlya-systemjs"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get-i-set-v-okrujaushchem-kontekste"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"api-dlya-podderjki-build-i-incremental"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"versionMMP":"3.7","lastVersionStatus":{"version":"3.7","date":"November 5, 2019"},"innovations":[{"id":"","version":"3.7","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"operator-opcionalnoi-posledovatelnosti"},{"id":"","version":"3.7","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"operator-obedineniya-so-znacheniem-null"},{"id":"","version":"3.7","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"utverjdenie-v-signature-signature-assertion"},{"id":"","version":"3.7","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"uluchshena-podderjka-dlya-tipa-never-vozvrashchaemogo-iz-funkcii"},{"id":"","version":"3.7","innovationName":"Проверка невызванных функций","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"proverka-nevyzvannyh-funkcii"},{"id":"","version":"3.7","innovationName":"Рекурсивность для псевдононимов типов","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"rekursivnost-dlya-psevdononimov-tipov"},{"id":"","version":"3.7","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":[],"path":"sovmestnoe-ispolzovanie-flagov-declaration-i-allowjs"}]}}],"pageNavDataAll":[{"name":"3.3","path":"","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"povyshenie-proizvoditelnosti-sborki-dlya-komandy-build-watch"}]},{"name":"3.4","path":"","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"opcii-kompilyatora-tsbuildinfofile"},{"name":"Опции компилятора --incremental","path":"opcii-kompilyatora-incremental"},{"name":"Массивоподобные readonly типы","path":"massivopodobnye-readonly-tipy"},{"name":"Расширенный тип ReadonlyArray","path":"rasshirennyi-tip-readonlyarray"},{"name":"Привидение к константе (const assertion)","path":"prividenie-k-konstante-const-assertion"}]},{"name":"3.5","path":"","sections":[{"name":"Вспомогательный тип Omit","path":"vspomogatelnyi-tip-omit"},{"name":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","path":"uluchshenie-mehanizma-proverki-izbytochnyh-polei-v-obedenennyh-tipah-union-types"},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"vvedenie-novogo-flaga-allowumdglobalaccess"},{"name":"Улучшение механизма проверки объединенных типов","path":"uluchshenie-mehanizma-proverki-obedinennyh-tipov"},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"uluchshenie-mehanizma-vyvoda-tipa-vysshego-poryadka-dlya-obobshchennyh-konstruktorov"},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"neyavnoe-ogranichenie-obobshchennyh-parametrov-tipom-unknown"},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"izmenenie-pravil-dlya-tipa-unknown-i-indeksnoi-signature"}]},{"name":"3.6","path":"","sections":[{"name":"Повышение типобезопасности генероторов","path":"povyshenie-tipobezopasnosti-generotorov"},{"name":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"dobavlenie-helpera-imetiruushchego-mehanizm-spread-array-pri-kompilyacii-v-ecmascript-nije-versii-6-pri-neaktivnom-flage-downleveliteration"},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"rasshirenie-sistemy-tipov-tipami-predstavlyaushchimi-struktury-dannyh-tolko-dlya-chteniya"},{"name":"Строковой идентификатор функции-конструктора","path":"strokovoi-identifikator-funkcii-konstruktora"},{"name":"Расширение вывода об ошибках при работе с Promise","path":"rasshirenie-vyvoda-ob-oshibkah-pri-rabote-s-promise"},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"sliyanie-odnoimennyh-klassov-i-funkcii-iz-okrujaushchego-konteksta"},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"dobavlena-podderjka-unicode-dlya-identifikatorov"},{"name":"Поддержка import.meta для SystemJS","path":"podderjka-import-meta-dlya-systemjs"},{"name":"get и set в окружающем контексте","path":"get-i-set-v-okrujaushchem-kontekste"},{"name":"Api для поддержки --build и --incremental","path":"api-dlya-podderjki-build-i-incremental"}]},{"name":"3.7","path":"","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"operator-opcionalnoi-posledovatelnosti"},{"name":"Оператор объединения со значением null (??)","path":"operator-obedineniya-so-znacheniem-null"},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"utverjdenie-v-signature-signature-assertion"},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"uluchshena-podderjka-dlya-tipa-never-vozvrashchaemogo-iz-funkcii"},{"name":"Проверка невызванных функций","path":"proverka-nevyzvannyh-funkcii"},{"name":"Рекурсивность для псевдононимов типов","path":"rekursivnost-dlya-psevdononimov-tipov"},{"name":"Совместное использование флагов --declaration и --allowJs","path":"sovmestnoe-ispolzovanie-flagov-declaration-i-allowjs"}]}]}}}